#version 430
const int buffer_width = BUFFER_WIDTH;
const int buffer_height = BUFFER_HEIGHT;

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(r32i) uniform iimage2D input_world;
layout(r32i) uniform iimage2D output_world;

const int mode = -1;

bool get_alive_status(int x, int y) {
    //return imageLoad(input_world, ivec2(x % buffer_width, y % buffer_height)).x == 1;
    if(x < 0 || x >= buffer_width || y < 0 || y >= buffer_height) {
        return false;
    }
    else {
        return imageLoad(input_world, ivec2(x, y)).x == 1;
    }
}

int alive_status(int x, int y) {
    return imageLoad(input_world, ivec2((buffer_width + x) % buffer_width, (buffer_height + y) % buffer_height)).x;
}

void set_alive_status(int x, int y, uint value) {
    imageStore(output_world, ivec2(x, y), ivec4(value, value, value, value));
}

void main() {
    int x = int(gl_GlobalInvocationID.x);
    int y = int(gl_GlobalInvocationID.y);

    int alive_neighbours = 0;

    if(mode == -1) {
        alive_neighbours = alive_status(x, y + 1)
        + alive_status(x, y - 1)
        + alive_status(x - 1, y)
        + alive_status(x + 1, y)
        + alive_status(x + 1, y + 1)
        + alive_status(x + 1, y - 1)
        + alive_status(x - 1, y + 1)
        + alive_status(x - 1, y - 1);

        if(get_alive_status(x, y)) {
            if(alive_neighbours < 2 || alive_neighbours > 3) {
                set_alive_status(x, y, 0);
            }
            else {
                set_alive_status(x, y, 1);
            }
        }
        else {
            if(alive_neighbours == 3) {
                set_alive_status(x, y, 1);
            }
            else {
                set_alive_status(x, y, 0);
            }
        }
    }
    else if(mode == 0) {
        if(get_alive_status(x - 1, y + 1)) {
            alive_neighbours += 1;
        }
        if(get_alive_status(x, y + 1)) {
            alive_neighbours += 1;
        }
        if(get_alive_status(x + 1, y + 1)) {
            alive_neighbours += 1;
        }
        if(get_alive_status(x + 1, y)) {
            alive_neighbours += 1;
        }
        if(get_alive_status(x + 1, y - 1)) {
            alive_neighbours += 1;
        }
        if(get_alive_status(x, y - 1)) {
            alive_neighbours += 1;
        }
        if(get_alive_status(x - 1, y - 1)) {
            alive_neighbours += 1;
        }
        if(get_alive_status(x - 1, y)) {
            alive_neighbours += 1;
        }

        if(get_alive_status(x, y)) {
            if(alive_neighbours < 2 || alive_neighbours > 3) {
                set_alive_status(x, y, 0);
            }
            else {
                set_alive_status(x, y, 1);
            }
        }
        else {
            if(alive_neighbours == 3) {
                set_alive_status(x, y, 1);
            }
            else {
                set_alive_status(x, y, 0);
            }
        }
    }
    else if (mode == 1) {
        for(int dx = -2; dx < 3; dx++) {
            for(int dy = -2; dy < 3; dy++) {
                if(dx * dx + dy * dy > 4 || (dx == 0 && dy == 0)) {
                    continue;
                }
                if(get_alive_status(x + dx, y + dy)) {
                    alive_neighbours += 1;
                }
            }
        }


        if(get_alive_status(x, y)) {
            if(alive_neighbours < 3 || alive_neighbours > 4) {
                set_alive_status(x, y, 0);
            }
            else {
                set_alive_status(x, y, 1);
            }
        }
        else {
            if(alive_neighbours < 3 || alive_neighbours > 3) {
                set_alive_status(x, y, 0);
            }
            else {
                set_alive_status(x, y, 1);
            }
        }
    }
    else if (mode == 2) {
        for(int dx = -1; dx < 2; dx++) {
            for(int dy = -1; dy < 2; dy++) {
                if(dx * dx + dy * dy > 1 || (dx == 0 && dy == 0)) {
                    continue;
                }
                if(get_alive_status(x + dx, y + dy)) {
                    alive_neighbours += 1;
                }
            }
        }

        if(get_alive_status(x, y)) {
            if(alive_neighbours < 1 || alive_neighbours > 2) {
                set_alive_status(x, y, 0);
            }
            else {
                set_alive_status(x, y, 1);
            }
        }
        else {
            if(alive_neighbours < 1 || alive_neighbours > 1) {
                set_alive_status(x, y, 0);
            }
            else {
                set_alive_status(x, y, 1);
            }
        }
    }  
    else if (mode == 3) {
        // for(int dx = -1; dx < 2; dx++) {
        //     for(int dy = -1; dy < 2; dy++) {
        //         if(dx == 0 && dy == 0) {
        //             continue;
        //         }
        //         else if(dx * dx + dy * dy > 1) {
        //             if(get_alive_status(x + dx, y + dy)) {
        //                 alive_neighbours += 1;
        //             }
        //         }
        //         else if(get_alive_status(x + dx, y + dy)) {
        //             alive_neighbours += 2;
        //         }
        //     }
        // }
        if(get_alive_status(x - 1, y + 1)) {
            alive_neighbours += 1;
        }
        if(get_alive_status(x, y + 1)) {
            alive_neighbours += 2;
        }
        if(get_alive_status(x + 1, y + 1)) {
            alive_neighbours += 1;
        }
        if(get_alive_status(x + 1, y)) {
            alive_neighbours += 2;
        }
        if(get_alive_status(x + 1, y - 1)) {
            alive_neighbours += 1;
        }
        if(get_alive_status(x, y - 1)) {
            alive_neighbours += 2;
        }
        if(get_alive_status(x - 1, y - 1)) {
            alive_neighbours += 1;
        }
        if(get_alive_status(x - 1, y)) {
            alive_neighbours += 2;
        }

        if(get_alive_status(x, y)) {
            if(alive_neighbours < 1 || alive_neighbours > 4) {
                set_alive_status(x, y, 0);
            }
            else {
                set_alive_status(x, y, 1);
            }
        }
        else {
            if(alive_neighbours < 4 || alive_neighbours > 4) {
                set_alive_status(x, y, 0);
            }
            else {
                set_alive_status(x, y, 1);
            }
        }
    }   
}
